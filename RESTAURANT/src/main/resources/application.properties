spring.application.name=RESTAURANT
#My sql
spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/datn?useSSL=false&serverTimezone=Asia/Ho_Chi_Minh&allowPublicKeyRetrieval=true&rewriteBatchedStatements=true&useServerPrepStmts=true&cachePrepStmts=true}
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:123456}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA
spring.jpa.hibernate.ddl-auto=update

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Connection pool
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# Transaction và Deadlock handling
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# MySQL specific settings để tránh deadlock
spring.jpa.properties.hibernate.connection.isolation=2
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

logging.level.org.hibernate.SQL=OFF
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=OFF

spring.jpa.open-in-view=false
server.error.include-message=always

# application.properties
# CHỌN MỘT CHUỖI BÍ MẬT DÀI VÀ KHÓ ĐOÁN
application.security.jwt.secret-key=${JWT_SECRET_KEY:472D4B6150645367566B5970337336763979244226452948404D635165546857}


# Thời gian sống của access token: 1800000
application.security.jwt.expiration=${JWT_EXPIRATION:1800000}

# Thời gian sống của refresh token: giữ nguyên (ví dụ: 7 ngày)
application.security.jwt.refresh-token.expiration=${JWT_REFRESH_TOKEN_EXPIRATION:604800000}

# Socket.IO Server Configuration
socket.host=${SOCKET_HOST:localhost}
socket.port=${SOCKET_PORT:9092}

# Jackson serialization settings
spring.jackson.default-property-inclusion=always

spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:your_google_client_id}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:your_google_client_secret}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI:http://localhost:8080/login/oauth2/code/google}


spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo


# Gmail SMTP Configuration - Simple approach
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:goldenbamboo.res@gmail.com}
spring.mail.password=${MAIL_PASSWORD:dijw guwd mepx csob}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=30000
spring.mail.properties.mail.smtp.timeout=30000
spring.mail.properties.mail.smtp.writetimeout=30000

# Logging để debug email
logging.level.org.springframework.mail=DEBUG
logging.level.com.sun.mail=DEBUG
logging.level.com.poly.restaurant.services.EmailService=DEBUG

# Email debug settings
spring.mail.debug=true

cloudinary.cloud_name=${CLOUDINARY_CLOUD_NAME:ddsy1x5bf}
cloudinary.api_key=${CLOUDINARY_API_KEY:468898768256474}
cloudinary.api_secret=${CLOUDINARY_API_SECRET:ok8_Xl7cCzzRFguOiq44b39oJ0I}
cloudinary.folder=${CLOUDINARY_FOLDER:restaurant/images}

# Development Environment VNPay Configuration
vnpay.tmn-code=${VNPAY_TMN_CODE:WPNKCIRH}
vnpay.hash-secret=${VNPAY_HASH_SECRET:UGCA2N7TVIGM9KEVXYN1SLSIX1JEH4WF}
vnpay.pay-url=${VNPAY_PAY_URL:https://sandbox.vnpayment.vn/paymentv2/vpcpay.html}
vnpay.return-url=${VNPAY_RETURN_URL:http://localhost:5173/payment/success}
vnpay.ipn-url=${VNPAY_IPN_URL:http://localhost:8080/api/payment/vnpay/ipn}

# GHTK (Giao Hàng Tiết Kiệm) Configuration
ghtk.token=${GHTK_TOKEN:2PTFBbdxAOlckOkaJteuXNMiwQCZ7ck6qQ99J2E}
ghtk.partner-code=${GHTK_PARTNER_CODE:S22737331}
ghtk.api.base-url=${GHTK_API_BASE_URL:https://services.giaohangtietkiem.vn}